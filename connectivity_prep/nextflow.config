process {
    publishDir = {"./results/$sid/$task.process"}
    scratch = true
    stageInMode = 'copy'
    stageOutMode = 'rsync'
    tag = { "$sid" }
    afterScript = 'sleep 1'
}

    

params {
    help=false
    root=false

    // **Decompose options**//
        no_pruning=false
        no_remove_loops=false
        no_remove_outliers=false
        min_length=20
        max_length=200
        loop_max_angle=330
        outlier_alpha=0.5

    // **Create mask ROI options**//
        source_roi = [26]
        target_roi = [27]

    //**Process control**//
        processes = false

    //**Output directory**//
        output_dir=false
        
    
}

if(params.output_dir) {
    process.publishDir = {"$params.output_dir/$sid/$task.process"}
}

if(params.processes) {
    if(params.processes > Runtime.runtime.availableProcessors()) {
        throw new RuntimeException("Number of processes higher than available CPUs.")
    }
    else if(params.processes < 1) {
        throw new RuntimeException("When set, number of processes must be >= 1 " +
                                   "and smaller or equal to the number of CPUs.")
    }
    else {
        executor.$local.cpus = params.processes
    }
}

profiles {
    compute_canada {
        env {
             FS_LICENSE="/home/pabaua/projects/def-pascalt-ab/pabaua/dev_tpil/tpil_network_analysis/connectivity_prep/freesurfer_data/license.txt"
             FREESURFER_HOME="/opt/freesurfer-7.3.1"
             SUBJECTS_DIR=params.input_fs
             ANTSPATH="/opt/ants-2.3.2/bin/"
        }
        singularity {
            autoMounts = true
            runOptions = "-B /home -B /project -B /scratch"
        }
    }
    local {
        env {
             FS_LICENSE="/home/pabaua/dev_tpil/data/Freesurfer/license.txt"
             FREESURFER_HOME="/opt/freesurfer-7.3.1"
             SUBJECTS_DIR=params.input_fs
             ANTSPATH="/opt/ants-2.3.2/bin/"
        }
        singularity.autoMounts = true
    }
}

